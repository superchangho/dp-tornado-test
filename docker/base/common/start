#!/bin/bash

if [ ! -d /data/app ]
then
  echo "App. volume mount is required."
  exit 1
fi

if [ -f /data/app/requirements.txt ]
then
  echo "PIP Requirements installing .."
  dp-pip install -r /data/app/requirements.txt > /dev/null 2>&1

  if [ $? -eq 0 ]
  then
    echo "PIP Requirements installed."
  else
    echo "PIP Requirements installing failed."
    return
  fi
fi

netstat -nr | grep '^0\.0\.0\.0' | awk '{print $2}' > /data/dp/host_addr
export host_addr=$(cat /data/dp/host_addr)

if [ "$(cat /etc/hosts | grep host.addr)" = "" ]
then
  echo "$host_addr host.addr" >> /etc/hosts
fi

if [ -f /data/before ]
then
  bash /data/before
fi

if [ "$dp_mode" != "" ]
then
  __DP_CFG_MODE__=$dp_mode
else
  __DP_CFG_MODE__=production
fi

if [ "$dp_ini" != "" ]
then
  __DP_CFG_INI__=$dp_ini
else
  __DP_CFG_INI__=config.ini
fi

if [ "$dp_debug" != "" ]
then
  __DP_CFG_DEBUG__=$dp_debug
else
  __DP_CFG_DEBUG__=no
fi

chown -R dp4p:dp4p /data

cd /data/app
su dp4p -c "nohup dp4p run --mode=$__DP_CFG_MODE__ --ini=$__DP_CFG_INI__ --debug=$__DP_CFG_DEBUG__ --port=$(cat /data/dp/port) > /data/out.log 2>&1 &"

